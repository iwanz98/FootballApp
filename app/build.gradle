apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.wanztudio.gdk.matchschedule"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    signingConfigs {
        release
    }

    flavorDimensions "tier"
    productFlavors {
        dev {
            buildConfigField("String", "BASE_URL", "\"https://www.thesportsdb.com/api/v1/json/1\"")
            resValue "string", "app_name", "Football Match Schedule Dev"
        }
        production {
            buildConfigField("String", "BASE_URL", "\"https://www.thesportsdb.com/api/v1/json/1\"")
            resValue "string", "app_name", "Football Match Schedule"
        }
    }
    buildTypes {
        debug {
            applicationIdSuffix '.dev'
            versionNameSuffix '-dev'
            debuggable true
            multiDexEnabled true
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            multiDexEnabled false
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

androidExtensions {
    experimental = true
}

kapt {
    generateStubs = true
}

configurations.all {
    exclude group: 'com.android.support', module: 'support-v13'
    resolutionStrategy.force "com.android.support:support-annotations:$supportLibraryVersion"
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$rootProject.kotlinVersion"

    // Android support libraries
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:design:$rootProject.supportLibraryVersion"
    implementation "com.android.support.constraint:constraint-layout:$rootProject.constraintVersion"

    // Anko
    implementation "org.jetbrains.anko:anko-commons:$rootProject.ankoVersion"

    // Network
    implementation "com.amitshekhar.android:rx2-android-networking:$rootProject.rx2FastAndroidNetworking"

    // Font
    implementation "io.github.inflationx:calligraphy3:$rootProject.calligraphyVersion"
    implementation "io.github.inflationx:viewpump:$rootProject.viewpumpVersion"

    // Glide
    implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"
    kapt "com.github.bumptech.glide:compiler:$rootProject.glideVersion"

    // Parser
    implementation "com.google.code.gson:gson:$rootProject.gsonVersion"

    // Dependency injection
    implementation "com.google.dagger:dagger:$rootProject.dagger2Version"
    kapt "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.dagger2Version"
    implementation "com.google.dagger:dagger-android-support:$rootProject.dagger2Version"

    // Reactive
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxjava2Version"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxandroidVersion"

    // Code generator for view
    implementation "com.jakewharton:butterknife:$rootProject.butterKnifeVersion"
    kapt "com.jakewharton:butterknife-compiler:$rootProject.butterKnifeVersion"

    // Logger
    implementation "com.jakewharton.timber:timber:$rootProject.timberVersion"

    // Dependencies for local unit tests
    testImplementation "junit:junit:$rootProject.ext.junitVersion"
    testImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"
    kaptTest "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"

    // UI Testing
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$rootProject.espressoVersion"
    androidTestImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"

    // Android Kotlin Extension
    implementation "androidx.core:core-ktx:$rootProject.androidKTXVersion"
}

